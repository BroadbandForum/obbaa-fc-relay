// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: control_relay_service.proto

package pb

import (
	context "context"
	_ "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ControllerHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControllerHello) Reset() {
	*x = ControllerHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_relay_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerHello) ProtoMessage() {}

func (x *ControllerHello) ProtoReflect() protoreflect.Message {
	mi := &file_control_relay_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerHello.ProtoReflect.Descriptor instead.
func (*ControllerHello) Descriptor() ([]byte, []int) {
	return file_control_relay_service_proto_rawDescGZIP(), []int{0}
}

type DeviceHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName string `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
}

func (x *DeviceHello) Reset() {
	*x = DeviceHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_relay_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceHello) ProtoMessage() {}

func (x *DeviceHello) ProtoReflect() protoreflect.Message {
	mi := &file_control_relay_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceHello.ProtoReflect.Descriptor instead.
func (*DeviceHello) Descriptor() ([]byte, []int) {
	return file_control_relay_service_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceHello) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to LocalEndpointHello:
	//	*HelloRequest_Controller
	//	*HelloRequest_Device
	LocalEndpointHello isHelloRequest_LocalEndpointHello `protobuf_oneof:"local_endpoint_hello"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_relay_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_relay_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_control_relay_service_proto_rawDescGZIP(), []int{2}
}

func (m *HelloRequest) GetLocalEndpointHello() isHelloRequest_LocalEndpointHello {
	if m != nil {
		return m.LocalEndpointHello
	}
	return nil
}

func (x *HelloRequest) GetController() *ControllerHello {
	if x, ok := x.GetLocalEndpointHello().(*HelloRequest_Controller); ok {
		return x.Controller
	}
	return nil
}

func (x *HelloRequest) GetDevice() *DeviceHello {
	if x, ok := x.GetLocalEndpointHello().(*HelloRequest_Device); ok {
		return x.Device
	}
	return nil
}

type isHelloRequest_LocalEndpointHello interface {
	isHelloRequest_LocalEndpointHello()
}

type HelloRequest_Controller struct {
	Controller *ControllerHello `protobuf:"bytes,1,opt,name=controller,proto3,oneof"`
}

type HelloRequest_Device struct {
	Device *DeviceHello `protobuf:"bytes,2,opt,name=device,proto3,oneof"`
}

func (*HelloRequest_Controller) isHelloRequest_LocalEndpointHello() {}

func (*HelloRequest_Device) isHelloRequest_LocalEndpointHello() {}

type HelloResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RemoteEndpointHello:
	//	*HelloResponse_Controller
	//	*HelloResponse_Device
	RemoteEndpointHello isHelloResponse_RemoteEndpointHello `protobuf_oneof:"remote_endpoint_hello"`
}

func (x *HelloResponse) Reset() {
	*x = HelloResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_relay_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloResponse) ProtoMessage() {}

func (x *HelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_relay_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloResponse.ProtoReflect.Descriptor instead.
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return file_control_relay_service_proto_rawDescGZIP(), []int{3}
}

func (m *HelloResponse) GetRemoteEndpointHello() isHelloResponse_RemoteEndpointHello {
	if m != nil {
		return m.RemoteEndpointHello
	}
	return nil
}

func (x *HelloResponse) GetController() *ControllerHello {
	if x, ok := x.GetRemoteEndpointHello().(*HelloResponse_Controller); ok {
		return x.Controller
	}
	return nil
}

func (x *HelloResponse) GetDevice() *DeviceHello {
	if x, ok := x.GetRemoteEndpointHello().(*HelloResponse_Device); ok {
		return x.Device
	}
	return nil
}

type isHelloResponse_RemoteEndpointHello interface {
	isHelloResponse_RemoteEndpointHello()
}

type HelloResponse_Controller struct {
	Controller *ControllerHello `protobuf:"bytes,1,opt,name=controller,proto3,oneof"`
}

type HelloResponse_Device struct {
	Device *DeviceHello `protobuf:"bytes,2,opt,name=device,proto3,oneof"`
}

func (*HelloResponse_Controller) isHelloResponse_RemoteEndpointHello() {}

func (*HelloResponse_Device) isHelloResponse_RemoteEndpointHello() {}

var File_control_relay_service_proto protoreflect.FileDescriptor

var file_control_relay_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x22, 0x2e, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x48, 0x00, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x22, 0xb6,
	0x01, 0x0a, 0x0d, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x48,
	0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x3f, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x17,
	0x0a, 0x15, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x32, 0x76, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x26, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x12, 0x5a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_control_relay_service_proto_rawDescOnce sync.Once
	file_control_relay_service_proto_rawDescData = file_control_relay_service_proto_rawDesc
)

func file_control_relay_service_proto_rawDescGZIP() []byte {
	file_control_relay_service_proto_rawDescOnce.Do(func() {
		file_control_relay_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_control_relay_service_proto_rawDescData)
	})
	return file_control_relay_service_proto_rawDescData
}

var file_control_relay_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_control_relay_service_proto_goTypes = []interface{}{
	(*ControllerHello)(nil), // 0: control_relay_service.v1.ControllerHello
	(*DeviceHello)(nil),     // 1: control_relay_service.v1.DeviceHello
	(*HelloRequest)(nil),    // 2: control_relay_service.v1.HelloRequest
	(*HelloResponse)(nil),   // 3: control_relay_service.v1.HelloResponse
}
var file_control_relay_service_proto_depIdxs = []int32{
	0, // 0: control_relay_service.v1.HelloRequest.controller:type_name -> control_relay_service.v1.ControllerHello
	1, // 1: control_relay_service.v1.HelloRequest.device:type_name -> control_relay_service.v1.DeviceHello
	0, // 2: control_relay_service.v1.HelloResponse.controller:type_name -> control_relay_service.v1.ControllerHello
	1, // 3: control_relay_service.v1.HelloResponse.device:type_name -> control_relay_service.v1.DeviceHello
	2, // 4: control_relay_service.v1.ControlRelayHelloService.Hello:input_type -> control_relay_service.v1.HelloRequest
	3, // 5: control_relay_service.v1.ControlRelayHelloService.Hello:output_type -> control_relay_service.v1.HelloResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_control_relay_service_proto_init() }
func file_control_relay_service_proto_init() {
	if File_control_relay_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_control_relay_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_relay_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_relay_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_relay_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_control_relay_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*HelloRequest_Controller)(nil),
		(*HelloRequest_Device)(nil),
	}
	file_control_relay_service_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*HelloResponse_Controller)(nil),
		(*HelloResponse_Device)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_control_relay_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_control_relay_service_proto_goTypes,
		DependencyIndexes: file_control_relay_service_proto_depIdxs,
		MessageInfos:      file_control_relay_service_proto_msgTypes,
	}.Build()
	File_control_relay_service_proto = out.File
	file_control_relay_service_proto_rawDesc = nil
	file_control_relay_service_proto_goTypes = nil
	file_control_relay_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ControlRelayHelloServiceClient is the client API for ControlRelayHelloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControlRelayHelloServiceClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
}

type controlRelayHelloServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewControlRelayHelloServiceClient(cc grpc.ClientConnInterface) ControlRelayHelloServiceClient {
	return &controlRelayHelloServiceClient{cc}
}

func (c *controlRelayHelloServiceClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, "/control_relay_service.v1.ControlRelayHelloService/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControlRelayHelloServiceServer is the server API for ControlRelayHelloService service.
type ControlRelayHelloServiceServer interface {
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
}

// UnimplementedControlRelayHelloServiceServer can be embedded to have forward compatible implementations.
type UnimplementedControlRelayHelloServiceServer struct {
}

func (*UnimplementedControlRelayHelloServiceServer) Hello(context.Context, *HelloRequest) (*HelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}

func RegisterControlRelayHelloServiceServer(s *grpc.Server, srv ControlRelayHelloServiceServer) {
	s.RegisterService(&_ControlRelayHelloService_serviceDesc, srv)
}

func _ControlRelayHelloService_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlRelayHelloServiceServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/control_relay_service.v1.ControlRelayHelloService/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlRelayHelloServiceServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ControlRelayHelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "control_relay_service.v1.ControlRelayHelloService",
	HandlerType: (*ControlRelayHelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _ControlRelayHelloService_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "control_relay_service.proto",
}
