// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: control_relay_packet_filter_service.v1.proto

package pb

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType int32

const (
	ControlRelayPacketFilterList_ControlRelayPacketFilter_INCLUDE ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType = 0
	ControlRelayPacketFilterList_ControlRelayPacketFilter_EXCLUDE ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType = 1
)

// Enum value maps for ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType.
var (
	ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType_name = map[int32]string{
		0: "INCLUDE",
		1: "EXCLUDE",
	}
	ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType_value = map[string]int32{
		"INCLUDE": 0,
		"EXCLUDE": 1,
	}
)

func (x ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType) Enum() *ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType {
	p := new(ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType)
	*p = x
	return p
}

func (x ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_control_relay_packet_filter_service_v1_proto_enumTypes[0].Descriptor()
}

func (ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType) Type() protoreflect.EnumType {
	return &file_control_relay_packet_filter_service_v1_proto_enumTypes[0]
}

func (x ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType.Descriptor instead.
func (ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType) EnumDescriptor() ([]byte, []int) {
	return file_control_relay_packet_filter_service_v1_proto_rawDescGZIP(), []int{0, 0, 0}
}

type ControlRelayPacketFilterResponse_Response int32

const (
	ControlRelayPacketFilterResponse_SUCCESS ControlRelayPacketFilterResponse_Response = 0
	ControlRelayPacketFilterResponse_FAIL    ControlRelayPacketFilterResponse_Response = 1
)

// Enum value maps for ControlRelayPacketFilterResponse_Response.
var (
	ControlRelayPacketFilterResponse_Response_name = map[int32]string{
		0: "SUCCESS",
		1: "FAIL",
	}
	ControlRelayPacketFilterResponse_Response_value = map[string]int32{
		"SUCCESS": 0,
		"FAIL":    1,
	}
)

func (x ControlRelayPacketFilterResponse_Response) Enum() *ControlRelayPacketFilterResponse_Response {
	p := new(ControlRelayPacketFilterResponse_Response)
	*p = x
	return p
}

func (x ControlRelayPacketFilterResponse_Response) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlRelayPacketFilterResponse_Response) Descriptor() protoreflect.EnumDescriptor {
	return file_control_relay_packet_filter_service_v1_proto_enumTypes[1].Descriptor()
}

func (ControlRelayPacketFilterResponse_Response) Type() protoreflect.EnumType {
	return &file_control_relay_packet_filter_service_v1_proto_enumTypes[1]
}

func (x ControlRelayPacketFilterResponse_Response) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlRelayPacketFilterResponse_Response.Descriptor instead.
func (ControlRelayPacketFilterResponse_Response) EnumDescriptor() ([]byte, []int) {
	return file_control_relay_packet_filter_service_v1_proto_rawDescGZIP(), []int{1, 0}
}

type ControlRelayPacketFilterList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter []*ControlRelayPacketFilterList_ControlRelayPacketFilter `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ControlRelayPacketFilterList) Reset() {
	*x = ControlRelayPacketFilterList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_relay_packet_filter_service_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlRelayPacketFilterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlRelayPacketFilterList) ProtoMessage() {}

func (x *ControlRelayPacketFilterList) ProtoReflect() protoreflect.Message {
	mi := &file_control_relay_packet_filter_service_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlRelayPacketFilterList.ProtoReflect.Descriptor instead.
func (*ControlRelayPacketFilterList) Descriptor() ([]byte, []int) {
	return file_control_relay_packet_filter_service_v1_proto_rawDescGZIP(), []int{0}
}

func (x *ControlRelayPacketFilterList) GetFilter() []*ControlRelayPacketFilterList_ControlRelayPacketFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ControlRelayPacketFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response ControlRelayPacketFilterResponse_Response `protobuf:"varint,1,opt,name=response,proto3,enum=control_relay_packet_filter_service.v1.ControlRelayPacketFilterResponse_Response" json:"response,omitempty"`
}

func (x *ControlRelayPacketFilterResponse) Reset() {
	*x = ControlRelayPacketFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_relay_packet_filter_service_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlRelayPacketFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlRelayPacketFilterResponse) ProtoMessage() {}

func (x *ControlRelayPacketFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_relay_packet_filter_service_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlRelayPacketFilterResponse.ProtoReflect.Descriptor instead.
func (*ControlRelayPacketFilterResponse) Descriptor() ([]byte, []int) {
	return file_control_relay_packet_filter_service_v1_proto_rawDescGZIP(), []int{1}
}

func (x *ControlRelayPacketFilterResponse) GetResponse() ControlRelayPacketFilterResponse_Response {
	if x != nil {
		return x.Response
	}
	return ControlRelayPacketFilterResponse_SUCCESS
}

type ControlRelayPacketFilterList_ControlRelayPacketFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType `protobuf:"varint,1,opt,name=type,proto3,enum=control_relay_packet_filter_service.v1.ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType" json:"type,omitempty"`
	DeviceName      string                                                           `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	DeviceInterface string                                                           `protobuf:"bytes,3,opt,name=device_interface,json=deviceInterface,proto3" json:"device_interface,omitempty"`
	OriginatingRule string                                                           `protobuf:"bytes,4,opt,name=originating_rule,json=originatingRule,proto3" json:"originating_rule,omitempty"`
}

func (x *ControlRelayPacketFilterList_ControlRelayPacketFilter) Reset() {
	*x = ControlRelayPacketFilterList_ControlRelayPacketFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_relay_packet_filter_service_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlRelayPacketFilterList_ControlRelayPacketFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlRelayPacketFilterList_ControlRelayPacketFilter) ProtoMessage() {}

func (x *ControlRelayPacketFilterList_ControlRelayPacketFilter) ProtoReflect() protoreflect.Message {
	mi := &file_control_relay_packet_filter_service_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlRelayPacketFilterList_ControlRelayPacketFilter.ProtoReflect.Descriptor instead.
func (*ControlRelayPacketFilterList_ControlRelayPacketFilter) Descriptor() ([]byte, []int) {
	return file_control_relay_packet_filter_service_v1_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ControlRelayPacketFilterList_ControlRelayPacketFilter) GetType() ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType {
	if x != nil {
		return x.Type
	}
	return ControlRelayPacketFilterList_ControlRelayPacketFilter_INCLUDE
}

func (x *ControlRelayPacketFilterList_ControlRelayPacketFilter) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *ControlRelayPacketFilterList_ControlRelayPacketFilter) GetDeviceInterface() string {
	if x != nil {
		return x.DeviceInterface
	}
	return ""
}

func (x *ControlRelayPacketFilterList_ControlRelayPacketFilter) GetOriginatingRule() string {
	if x != nil {
		return x.OriginatingRule
	}
	return ""
}

var File_control_relay_packet_filter_service_v1_proto protoreflect.FileDescriptor

var file_control_relay_packet_filter_service_v1_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x03, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0xb7, 0x02, 0x0a, 0x18,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x7c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x68, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x26, 0x0a,
	0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x4e, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x43, 0x4c,
	0x55, 0x44, 0x45, 0x10, 0x01, 0x22, 0xb4, 0x01, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x51, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x32, 0xd9, 0x02, 0x0a,
	0x1f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xaf, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x44, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x1d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x48, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_control_relay_packet_filter_service_v1_proto_rawDescOnce sync.Once
	file_control_relay_packet_filter_service_v1_proto_rawDescData = file_control_relay_packet_filter_service_v1_proto_rawDesc
)

func file_control_relay_packet_filter_service_v1_proto_rawDescGZIP() []byte {
	file_control_relay_packet_filter_service_v1_proto_rawDescOnce.Do(func() {
		file_control_relay_packet_filter_service_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_control_relay_packet_filter_service_v1_proto_rawDescData)
	})
	return file_control_relay_packet_filter_service_v1_proto_rawDescData
}

var file_control_relay_packet_filter_service_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_control_relay_packet_filter_service_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_control_relay_packet_filter_service_v1_proto_goTypes = []interface{}{
	(ControlRelayPacketFilterList_ControlRelayPacketFilter_FilterType)(0), // 0: control_relay_packet_filter_service.v1.ControlRelayPacketFilterList.ControlRelayPacketFilter.FilterType
	(ControlRelayPacketFilterResponse_Response)(0),                        // 1: control_relay_packet_filter_service.v1.ControlRelayPacketFilterResponse.Response
	(*ControlRelayPacketFilterList)(nil),                                  // 2: control_relay_packet_filter_service.v1.ControlRelayPacketFilterList
	(*ControlRelayPacketFilterResponse)(nil),                              // 3: control_relay_packet_filter_service.v1.ControlRelayPacketFilterResponse
	(*ControlRelayPacketFilterList_ControlRelayPacketFilter)(nil),         // 4: control_relay_packet_filter_service.v1.ControlRelayPacketFilterList.ControlRelayPacketFilter
	(*empty.Empty)(nil), // 5: google.protobuf.Empty
}
var file_control_relay_packet_filter_service_v1_proto_depIdxs = []int32{
	4, // 0: control_relay_packet_filter_service.v1.ControlRelayPacketFilterList.filter:type_name -> control_relay_packet_filter_service.v1.ControlRelayPacketFilterList.ControlRelayPacketFilter
	1, // 1: control_relay_packet_filter_service.v1.ControlRelayPacketFilterResponse.response:type_name -> control_relay_packet_filter_service.v1.ControlRelayPacketFilterResponse.Response
	0, // 2: control_relay_packet_filter_service.v1.ControlRelayPacketFilterList.ControlRelayPacketFilter.type:type_name -> control_relay_packet_filter_service.v1.ControlRelayPacketFilterList.ControlRelayPacketFilter.FilterType
	2, // 3: control_relay_packet_filter_service.v1.ControlRelayPacketFilterService.SetControlRelayPacketFilter:input_type -> control_relay_packet_filter_service.v1.ControlRelayPacketFilterList
	5, // 4: control_relay_packet_filter_service.v1.ControlRelayPacketFilterService.ClearControlRelayPacketFilter:input_type -> google.protobuf.Empty
	3, // 5: control_relay_packet_filter_service.v1.ControlRelayPacketFilterService.SetControlRelayPacketFilter:output_type -> control_relay_packet_filter_service.v1.ControlRelayPacketFilterResponse
	3, // 6: control_relay_packet_filter_service.v1.ControlRelayPacketFilterService.ClearControlRelayPacketFilter:output_type -> control_relay_packet_filter_service.v1.ControlRelayPacketFilterResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_control_relay_packet_filter_service_v1_proto_init() }
func file_control_relay_packet_filter_service_v1_proto_init() {
	if File_control_relay_packet_filter_service_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_control_relay_packet_filter_service_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlRelayPacketFilterList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_relay_packet_filter_service_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlRelayPacketFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_relay_packet_filter_service_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlRelayPacketFilterList_ControlRelayPacketFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_control_relay_packet_filter_service_v1_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_control_relay_packet_filter_service_v1_proto_goTypes,
		DependencyIndexes: file_control_relay_packet_filter_service_v1_proto_depIdxs,
		EnumInfos:         file_control_relay_packet_filter_service_v1_proto_enumTypes,
		MessageInfos:      file_control_relay_packet_filter_service_v1_proto_msgTypes,
	}.Build()
	File_control_relay_packet_filter_service_v1_proto = out.File
	file_control_relay_packet_filter_service_v1_proto_rawDesc = nil
	file_control_relay_packet_filter_service_v1_proto_goTypes = nil
	file_control_relay_packet_filter_service_v1_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ControlRelayPacketFilterServiceClient is the client API for ControlRelayPacketFilterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControlRelayPacketFilterServiceClient interface {
	SetControlRelayPacketFilter(ctx context.Context, in *ControlRelayPacketFilterList, opts ...grpc.CallOption) (*ControlRelayPacketFilterResponse, error)
	ClearControlRelayPacketFilter(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ControlRelayPacketFilterResponse, error)
}

type controlRelayPacketFilterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewControlRelayPacketFilterServiceClient(cc grpc.ClientConnInterface) ControlRelayPacketFilterServiceClient {
	return &controlRelayPacketFilterServiceClient{cc}
}

func (c *controlRelayPacketFilterServiceClient) SetControlRelayPacketFilter(ctx context.Context, in *ControlRelayPacketFilterList, opts ...grpc.CallOption) (*ControlRelayPacketFilterResponse, error) {
	out := new(ControlRelayPacketFilterResponse)
	err := c.cc.Invoke(ctx, "/control_relay_packet_filter_service.v1.ControlRelayPacketFilterService/SetControlRelayPacketFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlRelayPacketFilterServiceClient) ClearControlRelayPacketFilter(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ControlRelayPacketFilterResponse, error) {
	out := new(ControlRelayPacketFilterResponse)
	err := c.cc.Invoke(ctx, "/control_relay_packet_filter_service.v1.ControlRelayPacketFilterService/ClearControlRelayPacketFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControlRelayPacketFilterServiceServer is the server API for ControlRelayPacketFilterService service.
type ControlRelayPacketFilterServiceServer interface {
	SetControlRelayPacketFilter(context.Context, *ControlRelayPacketFilterList) (*ControlRelayPacketFilterResponse, error)
	ClearControlRelayPacketFilter(context.Context, *empty.Empty) (*ControlRelayPacketFilterResponse, error)
}

// UnimplementedControlRelayPacketFilterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedControlRelayPacketFilterServiceServer struct {
}

func (*UnimplementedControlRelayPacketFilterServiceServer) SetControlRelayPacketFilter(context.Context, *ControlRelayPacketFilterList) (*ControlRelayPacketFilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetControlRelayPacketFilter not implemented")
}
func (*UnimplementedControlRelayPacketFilterServiceServer) ClearControlRelayPacketFilter(context.Context, *empty.Empty) (*ControlRelayPacketFilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearControlRelayPacketFilter not implemented")
}

func RegisterControlRelayPacketFilterServiceServer(s *grpc.Server, srv ControlRelayPacketFilterServiceServer) {
	s.RegisterService(&_ControlRelayPacketFilterService_serviceDesc, srv)
}

func _ControlRelayPacketFilterService_SetControlRelayPacketFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ControlRelayPacketFilterList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlRelayPacketFilterServiceServer).SetControlRelayPacketFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/control_relay_packet_filter_service.v1.ControlRelayPacketFilterService/SetControlRelayPacketFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlRelayPacketFilterServiceServer).SetControlRelayPacketFilter(ctx, req.(*ControlRelayPacketFilterList))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControlRelayPacketFilterService_ClearControlRelayPacketFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlRelayPacketFilterServiceServer).ClearControlRelayPacketFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/control_relay_packet_filter_service.v1.ControlRelayPacketFilterService/ClearControlRelayPacketFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlRelayPacketFilterServiceServer).ClearControlRelayPacketFilter(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ControlRelayPacketFilterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "control_relay_packet_filter_service.v1.ControlRelayPacketFilterService",
	HandlerType: (*ControlRelayPacketFilterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetControlRelayPacketFilter",
			Handler:    _ControlRelayPacketFilterService_SetControlRelayPacketFilter_Handler,
		},
		{
			MethodName: "ClearControlRelayPacketFilter",
			Handler:    _ControlRelayPacketFilterService_ClearControlRelayPacketFilter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "control_relay_packet_filter_service.v1.proto",
}
